'use strict';
var canShoot = true;
var startTime = false;
var baddudes;
class Boot {
  
  init() {
    //creating variable
  
  }
  preload() {
    this.load.image('bxtrm','beexterm.png');
    this.load.image('bgud','bulgd.png');
    this.load.image('bbad','bulbd.png');
    this.load.image('btrfly','btrfly.png');
    
  }
  badguys(x,y) {
    baddudes = this.game.add.sprite(x,y,'btrfly');
    game.physics.p2.enable(baddudes);
    this.badbois(4,x,y);
    game.physics.p2.enable(baddudes.children[0,1,2,3]);
    baddudes.body.kinematic = true;
    baddudes.children[0,1,2,3].body.kinematic = true;
    baddudes.body.velocity.x = -60;
    
  }
  badbois(w,x,y) {
    for (var i=0;i < w; i++) {
      var t = i * 46;
      console.log(t);
      baddudes.addChild(game.add.sprite(x + t - 64, y - 46, 'btrfly'));
      console.log(baddudes.children[i].y);
      if (i===3) {
        baddudes.children[3].x += 18;
        baddudes.children[3].y += 15;
      }
    }
  }
  
  bullet() {
    canShoot = false;
    this.bulgd = game.add.sprite(this.player.body.x,this.player.body.y - 33, 'bgud');
    this.bulgd.scale.setTo(3,6);
    game.physics.p2.enable(this.bulgd);
    this.bulgd.body.velocity.y = -120;
    this.bulgd.body.kinematic = true;
    this.bulletTimer();
  }
  
  bulletTimer() {
    game.time.removeAll();
    var timer = game.time.create(true);
    timer.loop(4000,this.nowTrue);
    timer.start();
  }
  
  nowTrue(c) {
    canShoot = true; 
  }
  nowFalse(c) {
    startTime = true;
  }
  
  create() {
    //physics
    game.physics.startSystem(Phaser.Physics.P2JS);
    //player
    this.player = game.add.sprite(140,400,'bxtrm');
    game.physics.p2.enable(this.player);
    this.player.body.kinematic = true;
    this.cursors = game.input.keyboard.createCursorKeys();
    //enemies
    this.badguys(90,30);

    //starting delay
    var timer = game.time.create(true);
    timer.loop(4000, this.nowFalse);
    timer.start();
    console.log(46*5);
  }
  update() {
    if (this.cursors.left.isDown) {
      this.player.body.x -= 3;
    }
    if (this.cursors.right.isDown) {
      this.player.body.x += 3;
    }
    if (this.cursors.up.isDown) {
      if (canShoot === true) {
        this.bullet();
        console.log("fire");
      }else {
        console.log("you cannot shoot!");
      }
    }
    if (baddudes.body.x <= 46) {
      baddudes.body.velocity.x = -60;
     if (startTime === true){
        baddudes.body.y += 46;
      }
    console.log("it made it")
    } 
    /*if (baddudes.children[3].body.x >= 270) {
      baddudes.body.velocity.x = 60;
      for (i = 0; i < 4;i++) {
          baddudes.children[i].body.velocity.x = 60;
          baddudes.children[i].body.y += 42;
      }
      baddudes.body.y += 46;
    }*/
  }

}


var game = new Phaser.Game(320,568);
game.state.add('Play', Boot);
game.state.start('Play');
